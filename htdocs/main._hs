-- View

def view.renderFiles()
    fetch `/api/files`
        set response to result as an Object
        set output to ""
        if response.files is not empty
            for file in response.files
                append `<li><div class="uk-grid">
                        <div class="uk-width-expand@s">${file}</div>
                        <div>
                            <a href="#" uk-icon="icon: users" uk-tooltip="List Users" onclick="view.renderCreds('${file}')"></a>
                            <a href="#" uk-icon="icon: pencil" uk-tooltip="Rename File" onclick="view.showRenameFile('${file}')"></a>
                            <a href="#" uk-icon="icon: trash" uk-tooltip="Delete File" onclick="view.showDeleteFile('${file}')"></a>
                        </div>
                    </div></li>` to output
            end
        else
            append `<li><div class="uk-grid">
                    <div class="uk-width-expand@s">Not available</div>
                </div></li>` to output
        end
        put output into innerHTML of #listFiles
        add @hidden to #boxListCredentials    
end

def view.renderCreds(filename)
    log 'view.renderCreds:', filename
    fetch `/api/file/${filename}/credentials`
        set response to result as an Object
        set output to "" 
        if response.credentials is not empty
            for cred in response.credentials
                append `<li><div class="uk-grid">
                        <div class="uk-width-expand@s">${cred}</div>
                        <div>
                            <a href="#" uk-icon="icon: pencil" uk-tooltip="Revise Credential" onclick="view.showReviseCred('${filename}', '${cred}')"></a>
                            <a href="#" uk-icon="icon: trash" uk-tooltip="Delete Credential" onclick="view.showDeleteCred('${filename}', '${cred}')"></a>
                        </div>
                    </div></li>` to output
            end
        else
            append `<li><div class="uk-grid">
                    <div class="uk-width-expand@s">Not available</div>
                </div></li>` to output
        end
        put output into innerHTML of #listCredentials
        remove @hidden from #boxListCredentials
        set #btnShowNewCred@onclick to `view.showNewCred('${filename}')`
end

def view.showNewFile()
    add @hidden to .uk-panel
    remove @hidden from #formNewFile
end

def view.showRenameFile(filename)
    log 'view.showRenameFile:', filename
    set #formRenameFile-filename@value to filename
    add @hidden to .uk-panel
    remove @hidden from #formRenameFile
end

def view.showDeleteFile(filename)
    log 'view.showDeleteFile:', filename
    set #formDeleteFile-filename@value to filename
    add @hidden to .uk-panel
    remove @hidden from #formDeleteFile
end

def view.showNewCred(filename)
    log 'view.showNewCred:', filename
    set #formNewCred-filename@value to filename
    add @hidden to .uk-panel
    remove @hidden from #formNewCred
end

def view.showReviseCred(filename, username)
    log 'view.showReviseCred:', filename, username
    set #formReviseCred-filename@value to filename
    set #formReviseCred-username@value to username
    add @hidden to .uk-panel
    remove @hidden from #formReviseCred
end

def view.showDeleteCred(filename, username)
    log 'view.showDeleteCred:', filename, username
    set #formDeleteCred-filename@value to filename
    set #formDeleteCred-username@value to username
    add @hidden to .uk-panel
    remove @hidden from #formDeleteCred
end

def view.alertInfo(message)
    remove @hidden from #panelAlert
    remove [.uk-alert-primary, .uk-alert-success, .uk-alert-warning, .uk-alert-danger] from #panelAlert
    add .uk-alert-primary to #panelAlert
    put the message into the innerHTML of #panelAlertContent
end

def view.alertSuccess(message)
    remove @hidden from #panelAlert
    remove [.uk-alert-primary, .uk-alert-success, .uk-alert-warning, .uk-alert-danger] from #panelAlert
    add .uk-alert-success to #panelAlert
    put the message into the innerHTML of #panelAlertContent
end

def view.alertWarning(message)
    remove @hidden from #panelAlert
    remove [.uk-alert-primary, .uk-alert-success, .uk-alert-warning, .uk-alert-danger] from #panelAlert
    add .uk-alert-warning to #panelAlert
    put the message into the innerHTML of #panelAlertContent
end

def view.alertDanger(message)
    remove @hidden from #panelAlert
    remove [.uk-alert-primary, .uk-alert-success, .uk-alert-warning, .uk-alert-danger] from #panelAlert
    add .uk-alert-danger to #panelAlert
    put the message into the innerHTML of #panelAlertContent
end

-- Control

def control.submitNewFile()
    set filename to value of #formNewFile-filename
    set cargo to { filename: filename } as JSON
    fetch `/api/file` { method: 'post', body: cargo, headers: { 'Content-type': 'application/json' } }
        set response to result as an Object
        view.alertSuccess(message of response)
        view.renderFiles()
        add @hidden to #formNewFile
end

def control.submitRenameFile()
    set filename to value of #formRenameFile-filename
    set newFilename to value of #formRenameFile-newFilename
    set cargo to { filename: newFilename } as JSON
    fetch `/api/file/${filename}` { method: 'put', body: cargo, headers: { 'Content-type': 'application/json' } } 
        set response to result as an Object
        view.alertSuccess(message of response)
        view.renderFiles()
        add @hidden to #formRenameFile
end

def control.confirmDeleteFile()
    set filename to value of #formDeleteFile-filename
    fetch `/api/file/${filename}` { method: 'delete' }
        set response to result as an Object
        view.alertSuccess(message of response)
        view.renderFiles()
        add @hidden to #formDeleteFile
end

def control.submitNewCred()
    set filename to value of #formNewCred-filename
    set username to value of #formNewCred-username
    set password to value of #formNewCred-password
    set cargo to { username: username, password: password } as JSON
    fetch `/api/file/${filename}/credential` { method: 'post', body: cargo, headers: { 'Content-type': 'application/json' } }
        set response to result as an Object
        view.alertSuccess(message of response)
        view.renderCreds(filename)
        add @hidden to #formNewCred
end

def control.submitReviseCred()
    set filename to value of #formReviseCred-filename
    set username to value of #formReviseCred-username
    set newUsername to value of #formReviseCred-newUsername
    set newPassword to value of #formReviseCred-newPassword
    set cargo to { username: newUsername, password: newPassword } as JSON
    fetch `/api/file/${filename}/credential/${username}` { method: 'put', body: cargo, headers: { 'Content-type': 'application/json' } }
        set response to result as an Object
        view.alertSuccess(message of response)
        view.renderCreds(filename)
        add @hidden to #formReviseCred
end

def control.confirmDeleteCred()
    set filename to value of #formDeleteCred-filename
    set username to value of #formDeleteCred-username
    fetch `/api/file/${filename}/credential/${username}` { method: 'delete' }
        set response to result as an Object
        view.alertSuccess(message of response)
        view.renderCreds(filename)
        add @hidden to #formDeleteCred
end